
syntax = "proto3";

service Users {
  rpc PaginateUsers (PaginateUsersRequest) returns (PaginateUsersReply);
  rpc IsOccupedUserUsername (IsOccupedUsernameRequest) returns (IsOccupedUsernameReply);
  rpc GetUser (GetUserRequest) returns (GetUserReply);
  rpc GetUsers (GetUsersRequest) returns (GetUsersReply);
  rpc UpdateUserProperty (UpdateUserPropertyRequest) returns (UpdateUserPropertyReply);
  rpc RemoveUserProperty (RemoveUserPropertyRequest) returns (RemoveUserPropertyReply);
  rpc ChangeUserPassword (ChangeUserPasswordRequest) returns (ChangeUserPasswordReply);
  rpc ChangeUserUsername (ChangeUserUsernameRequest) returns (ChangeUserUsernameReply);
  rpc ChangeUserRole (ChangeUserRoleRequest) returns (ChangeUserRoleReply);
  rpc CreateUser (CreateUserRequest) returns (CreateUserReply);
  rpc DeleteUser (DeleteUserRequest) returns (DeleteUserReply);
  rpc TokenUser (TokenUserRequest) returns (TokenUserReply);
  rpc RefreshUser (RefreshUserRequest) returns (RefreshUserReply);
  rpc RevokeUser (RevokeUserRequest) returns (RevokeUserReply);
}

message ChangeUserRoleRequest {
    string username = 1;
    string role = 2;
}

message ChangeUserRoleReply {}


message ChangeUserUsernameRequest {
    string username = 1;
    string newUsername = 2;
}

message ChangeUserUsernameReply {}


message ChangeUserPasswordRequest {
    string username = 1;
    string password = 2;
}

message ChangeUserPasswordReply {}


message RemoveUserPropertyRequest {
    string username = 1;
    string type = 2;
    string name = 3;
}

message RemoveUserPropertyReply {}


message DeleteUserRequest {
    string username = 1;
}

message DeleteUserReply {
    bool deleated = 1;
}

message PageUsersInformation {
    int32 skipped = 1;
    int32 limit = 2;
    int64 amount = 3;
}

message PaginateUsersReply {
    repeated GetUserReply users = 1;
    PageUsersInformation page = 2;
}

message UpdateUserPropertyReply {
    string username = 1;
    UserProperty property = 2;
}


message RevokeUserReply {

}

message RevokeUserRequest {
    string username = 1;
}

message RefreshUserRequest {
    string accessToken = 1;
    string refreshToken = 2;
    int64 expireMillisecondsIn = 3;
}

message RefreshUserReply {
    string accessToken = 1;
    string refreshToken = 2;
    string username = 3;
    int64 millisecondsLife = 4;
    int64 accessTokenExpirationTime = 5;
    int64 expireMillisecondsIn = 6;
}

message TokenUserRequest {
    string username = 1;
    string password = 2;
    int64 expireMillisecondsIn = 3;
}

message TokenUserReply {
    string accessToken = 1;
    string username = 2;
    string refreshToken = 3;
    int64 accessTokenExpirationTime = 4;
    int64 expireMillisecondsIn = 5;
}

message CreateUserRequest {
    string username = 1;
    string password = 2;
    string role = 3;
    repeated UserProperty properties = 4;
}


message CreateUserReply {
    string username = 1;
    string role = 3;
    repeated UserProperty properties = 4;
}

message UpdateUserPropertyRequest {
    string username = 1;
    string propertyType = 2;
    string propertyName = 3;
    string propertyNewValue = 4;
}

message GetUsersRequest {
    repeated string users = 1;
}

message GetUsersReply {
    repeated GetUserReply users = 1;
}

message GetUserRequest {
    string username = 1;
}

message IsOccupedUsernameRequest {
    string username = 1;
}

message IsOccupedUsernameReply {
    bool occuped = 1;
}

message PaginateUsersRequest {
    int32 skip = 1;
    int32 limit = 2;
    optional string containsUsername = 3;
    repeated string ignore = 4;
}


message GetUserReply {
    string id = 1;
    string username = 2;
    int64 creationTimestamp = 3;
    string role = 4;
    repeated UserProperty properties = 5;
}

message UserProperty {
    string type = 1;
    string name = 2;
    string value = 3;
}





